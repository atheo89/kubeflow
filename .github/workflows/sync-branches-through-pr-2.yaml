---
name: Sync branches through Pull Request

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      source:
        description: Source branch
        required: true
      target:
        description: Target branch
        required: true

jobs:
  sync:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target }}
          fetch-depth: 0

      - name: Prepare sync branch
        id: prepare
        run: |
          git fetch origin ${{ github.event.inputs.source }}
          git reset --hard origin/${{ github.event.inputs.source }}

          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          SYNC_BRANCH=sync__${{ github.event.inputs.source }}__${{ github.event.inputs.target }}__${TIMESTAMP}
          echo "branch=$SYNC_BRANCH" >> $GITHUB_OUTPUT

      - name: Merge target branch into source branch, handle conflicts
        run: |
          git checkout -b ${{ steps.prepare.outputs.branch }} origin/${{ github.event.inputs.target }}
          git merge --no-commit origin/${{ github.event.inputs.source }} || true

          # Define the line pattern to preserve in the target branch
          LINE_PATTERN="odh-notebook-controller-image=quay.io/opendatahub/odh-notebook-controller:1.9-*"  # e.g., "SPECIAL_VAR=.*"

          # Check if params.env has conflicts
          if git ls-files -u | grep "components/notebook-controller/config/overlays/openshift/params.env"; then
            # Resolve conflict by keeping the target branch's version for the specified line
            TARGET_LINE=$(grep "$LINE_PATTERN" params.env) || true
            
            if [ -n "$TARGET_LINE" ]; then
              # Use target branch's line
              sed -i "s|$LINE_PATTERN|$TARGET_LINE|" components/notebook-controller/config/overlays/openshift/params.env
            fi

            git add components/notebook-controller/config/overlays/openshift/params.env
          fi

          # Commit the merge, resolving conflicts
          git commit -m "Merge ${{ github.event.inputs.source }} into ${{ github.event.inputs.target }} with specified line preserved in params.env"

      - name: Create pull request
        uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f  # v7.0.5
        with:
          branch: ${{ steps.prepare.outputs.branch }}
          title: "Sync `${{ github.event.inputs.target }}` branch with `${{ github.event.inputs.source }}` branch"
          body: |
            :robot: This is an automated Pull Request created by `/.github/workflows/sync-branches-through-pr.yml`.

            It merges all commits from `${{ github.event.inputs.source }}` branch into `${{ github.event.inputs.target }}` branch.

            :warning: **IMPORTANT NOTE**: Remember to delete the `${{ steps.prepare.outputs.branch }}` branch after merging the changes.
