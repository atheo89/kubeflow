---
# This workflow automatically updates the notebook controller images with the latest commit ID
# Can be run on demand before a new release
name: Update Notebook Controller Images With Latest Commit ID
on:
  workflow_dispatch:
    inputs:
      branch-name:
        description: "Provide name of the branch, used to commit changes"
        required: true
        default: "main"
      organization:
        required: true
        description: "Owner of origin kubeflow repository"
        default: "opendatahub-io"

env:
  REPO_OWNER: ${{ github.event.inputs.organization }}
  REPO_NAME: kubeflow
  BRANCH_NAME: ${{ github.event.inputs.branch-name }}

jobs:
  update-notebook-controller-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout branch
      uses: actions/checkout@v4
      with:
        ref: ${{ env.BRANCH_NAME }}

    - name: Configure Git
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"

    - name: Retrieve latest commit
      id: commit-id
      shell: bash
      run: |
        PAYLOAD=$(curl --silent -H 'Accept: application/vnd.github.v4.raw' https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/commits?sha=$BRANCH_NAME&per_page=1)
        echo "COMMIT_ID=$(echo $PAYLOAD | jq -r '.[0].sha[0:7]')" >> ${GITHUB_OUTPUT}

    - name: Extract version from branch-name
      id: version
      run: |
        if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
          VERSION="main"
        else
          VERSION=$(echo "${{ env.BRANCH_NAME }}" | sed -E 's/^v([0-9]+\.[0-9]+)-.*/\1/')

          # Check if VERSION is empty, then assign the full branch name
          if [[ -z "$VERSION" ]]; then
            VERSION="${{ env.BRANCH_NAME }}"
          fi
        fi
        echo "VERSION=$VERSION" >> ${GITHUB_OUTPUT}
        echo "Extracted VERSION is: $VERSION"

    - name: Update related files
      id: apply-changes
      run: |
        COMMIT_ID=${{ steps.commit-id.outputs.COMMIT_ID }}
        VERSION=${{ steps.version.outputs.VERSION }}
        echo "Updating files in VERSION=${VERSION} with COMMIT_ID=${COMMIT_ID}"
        sed -E "s/(odh-kf-notebook-controller-image=quay\.io\/opendatahub\/kubeflow-notebook-controller:)[^: -]+(-)[^ ]+/\1$VERSION\2$COMMIT_ID/" -i components/notebook-controller/config/overlays/openshift/params.env
        sed -E "s/(odh-notebook-controller-image=quay\.io\/opendatahub\/odh-notebook-controller:)[^: -]+(-)[^ ]+/\1$VERSION\2$COMMIT_ID/" -i  components/odh-notebook-controller/config/base/params.env
        sed -E "s/(KF_TAG \?= )[^\-]+(-)[^ ]+/\1$VERSION\2$COMMIT_ID/" -i components/odh-notebook-controller/makefile-vars.mk

        git status
        if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
          echo "Changes detected, committing and pushing..."
          git add components/notebook-controller/config/overlays/openshift/params.env
          git add components/odh-notebook-controller/config/base/params.env
          git add components/odh-notebook-controller/makefile-vars.mk
          git commit -m ":robot: Update odh and notebook-controller with image ${VERSION}-${COMMIT_ID}"
          git push origin ${{ env.BRANCH_NAME }}
        else
          echo "No changes detected on ${{ env.BRANCH_NAME }}"
        fi
